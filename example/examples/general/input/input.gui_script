local druid = require("druid.druid")

local rich_input = require("druid.custom.rich_input.rich_input")
local upgraded_rich_input = require("druid.custom.upgraded_rich_input.upgraded_rich_input")

local function local_f(self, text)
	gui.set_text(gui.get_node("upgraded_input_header_1"), "hi local " .. text)
end

function global_f(self, text)
	gui.set_text(gui.get_node("upgraded_input_header_2"), "hi global " .. text)
end

function init(self)
	self.druid = druid.new(self)

	self.druid:new_input("input_box_usual", "input_text_usual")
	self.druid:new_input("input_box_password", "input_text_password", gui.KEYBOARD_TYPE_PASSWORD)
	self.druid:new_input("input_box_email", "input_text_email", gui.KEYBOARD_TYPE_EMAIL)
	self.druid:new_input("input_box_numpad", "input_text_numpad", gui.KEYBOARD_TYPE_NUMBER_PAD)
		:set_allowed_characters("[%d,.]")

	----[[
	hi_func = function(self, text)
		gui.set_text(gui.get_node("upgraded_input_header_3"), "hi named " .. text)
	end
		
	self.rich_input = self.druid:new(rich_input, "rich_input")
	self.rich_input:set_placeholder("Enter text here")

	self.upgraded_rich_input_1 = self.druid:new(upgraded_rich_input, "upgraded_1", nil, local_f)
	self.upgraded_rich_input_1:set_placeholder("Enter text here")

	self.upgraded_rich_input_2 = self.druid:new(upgraded_rich_input, "upgraded_2", nil, global_f)
	self.upgraded_rich_input_2:set_placeholder("Enter text here")

	self.upgraded_rich_input_3 = self.druid:new(upgraded_rich_input, "upgraded_3", nil, hi_func)
	self.upgraded_rich_input_3:set_placeholder("Enter text here")
	----]]
end


function final(self)
	self.druid:final()
end


function update(self, dt)
	self.druid:update(dt)
end


function on_message(self, message_id, message, sender)
	self.druid:on_message(message_id, message, sender)
end


function on_input(self, action_id, action)
	return self.druid:on_input(action_id, action)
end
